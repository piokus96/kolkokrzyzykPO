<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAGmKAABpigAAAAAAAAAA
        AABDQ0OqQ0NDm0NDQwpDQ0MAQ0NDBUNDQ4hDQ0OoQ0NDCkNDQwBDQ0MDQ0NDYkNDQ8ZDQ0PKQ0NDxkND
        Q3FDQ0MIQ0NDckNDQ+lDQ0OLQ0NDEENDQ3dDQ0PsQ0NDdkNDQwRDQ0MAQ0NDU0NDQ7lDQ0NDQ0NDF0ND
        QzNDQ0OkQ0NDdENDQwBDQ0NjQ0ND5kNDQ8RDQ0PnQ0NDdUNDQwRDQ0MAQ0NDCENDQ6tDQ0NNQ0NDAEND
        QwBDQ0MAQ0NDK0NDQ8RDQ0MAQ0NDB0NDQ65DQ0P/Q0NDwkNDQxBDQ0MAQ0NDAENDQxRDQ0O3Q0NDJ0ND
        QwBDQ0MAQ0NDAENDQw5DQ0O/Q0NDBkNDQ3pDQ0PoQ0NDqUNDQ+ZDQ0OPQ0NDCkNDQwBDQ0MHQ0NDqkND
        Q1dDQ0MAQ0NDAENDQwBDQ0MzQ0NDxUNDQ4lDQ0PsQ0NDc0NDQwVDQ0NhQ0ND7ENDQ41DQ0MGQ0NDAEND
        Q0xDQ0PBQ0NDVkNDQyVDQ0NFQ0NDsENDQ21DQ0OBQ0NDbkNDQwNDQ0MAQ0NDAENDQ2BDQ0N/Q0NDB0ND
        QwBDQ0MBQ0NDTUNDQ6pDQ0O3Q0NDrUNDQ1lDQ0MFQ0NDAkNDQwFDQ0MAQ0NDAENDQwBDQ0MAQ0NDAkND
        QwBDQ0MAQ0NDAENDQwBDQ0MHQ0NDFUNDQwlDQ0MAQ0NDAENDQwBDQ0MAQ0NDCkNDQxlDQ0MLQ0NDAEND
        QwBDQ0MAQ0NDAENDQwZDQ0MGQ0NDAENDQwBDQ0MAQ0NDAkNDQwtDQ0MDQ0NDU0NDQ6tDQ0OyQ0NDrUND
        Q1tDQ0MEQ0NDAENDQwFDQ0N6Q0NDkENDQwxDQ0MAQ0NDAUNDQ2dDQ0OyQ0NDXENDQ7VDQ0NEQ0NDGkND
        Qz5DQ0OzQ0NDW0NDQwBDQ0MAQ0NDXkNDQ+xDQ0OVQ0NDEENDQ2ZDQ0PrQ0NDnUNDQ71DQ0NJQ0NDAEND
        QwBDQ0MAQ0NDPkNDQ61DQ0MMQ0NDAENDQwBDQ0NdQ0ND5UNDQ8BDQ0PnQ0NDiENDQwpDQ0PKQ0NDI0ND
        QwBDQ0MAQ0NDAENDQxpDQ0OzQ0NDGkNDQwBDQ0MAQ0NDAkNDQ59DQ0P/Q0ND0ENDQxhDQ0MAQ0NDuUND
        Q1JDQ0MAQ0NDAENDQwBDQ0NHQ0NDqkNDQwpDQ0MAQ0NDAUNDQ2lDQ0PoQ0NDskNDQ+RDQ0OXQ0NDD0ND
        Q09DQ0O3Q0NDVUNDQydDQ0NPQ0NDt0NDQ09DQ0MAQ0NDAENDQ2dDQ0PsQ0NDhkNDQwlDQ0NZQ0ND50ND
        Q6pDQ0MAQ0NDTENDQ7VDQ0PHQ0NDuENDQ1VDQ0MCQ0NDAENDQwFDQ0N9Q0NDk0NDQwlDQ0MAQ0NDAEND
        Q2dDQ0O6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA==
</value>
  </data>
</root>